{"ast":null,"code":"import _slicedToArray from \"/home/dude/lambda-projects/React/dark-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nexport var useDarkMode = function useDarkMode() {\n  var _useLocalStorage = useLocalStorage(\"isOn\", {\n    status: \"false\"\n  }),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      darkMode = _useLocalStorage2[0],\n      setDarkMode = _useLocalStorage2[1];\n\n  console.log(darkMode);\n  useEffect(function () {\n    if (darkMode === 'true') {\n      var element = document.querySelector(\"body\");\n      element.classList.add(\"dark-mode\");\n    } else {\n      var element = document.querySelector(\"body\");\n      element.classList.remove(\"dark-mode\");\n      console.log(\"I'm in the false statement\");\n    }\n\n    return darkMode, setDarkMode;\n  }, [darkMode]);\n};","map":{"version":3,"sources":["/home/dude/lambda-projects/React/dark-mode/src/hooks/useDarkMode.js"],"names":["React","useState","useEffect","useLocalStorage","useDarkMode","status","darkMode","setDarkMode","console","log","element","document","querySelector","classList","add","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,eAAR,QAA8B,mBAA9B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,yBACCD,eAAe,CAAE,MAAF,EAAU;AAACE,IAAAA,MAAM,EAAE;AAAT,GAAV,CADhB;AAAA;AAAA,MACxBC,QADwB;AAAA,MACdC,WADc;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAGAJ,EAAAA,SAAS,CAAE,YAAO;AAClB,QAAII,QAAQ,KAAK,MAAjB,EAAyB;AACvB,UAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,WAAtB;AAED,KAJD,MAKK;AACJ,UAAIJ,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACCF,MAAAA,OAAO,CAACG,SAAR,CAAkBE,MAAlB,CAAyB,WAAzB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAED;;AACC,WAAOH,QAAQ,EAAGC,WAAlB;AAGH,GAfU,EAeR,CAACD,QAAD,CAfQ,CAAT;AAmBD,CAxBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useLocalStorage} from './useLocalStorage';\n\nexport const useDarkMode = () => {\n  const [darkMode, setDarkMode] = useLocalStorage( \"isOn\", {status: \"false\"});\n  console.log(darkMode)\n\n\n  useEffect( () =>  {\n  if (darkMode === 'true') {\n    var element = document.querySelector(\"body\")\n    element.classList.add(\"dark-mode\")\n\n  }\n  else {\n   var element = document.querySelector(\"body\")\n    element.classList.remove(\"dark-mode\")\n    console.log(\"I'm in the false statement\")\n\n  }\n    return(darkMode,  setDarkMode)\n\n\n}, [darkMode])\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}