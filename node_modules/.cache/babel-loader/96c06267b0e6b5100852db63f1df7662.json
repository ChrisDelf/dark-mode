{"ast":null,"code":"import _slicedToArray from \"/home/dude/lambda-projects/React/dark-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nexport var useLocalStorage = function useLocalStorage(key, initialValue) {\n  var _useState = useState(function () {\n    console.log(\"Stored\", storeValue);\n    var item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : initialValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      storedValue = _useState2[0],\n      setStoredValue = _useState2[1];\n\n  var setValue = function setValue(value) {\n    setStoredValue(value);\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [storedValue, setValue];\n};","map":{"version":3,"sources":["/home/dude/lambda-projects/React/dark-mode/src/hooks/useLocalStorage.js"],"names":["React","useState","useLocalStorage","key","initialValue","console","log","storeValue","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setValue","value","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,YAAN,EAAuB;AAAA,kBACdH,QAAQ,CAAC,YAAM;AACnDI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,UAAtB;AACA,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBP,GAArB,CAAb;AACA,WAAOK,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsBJ,YAAjC;AACD,GAJ6C,CADM;AAAA;AAAA,MAC7CS,WAD6C;AAAA,MAChCC,cADgC;;AAMpD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxBF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACAP,IAAAA,YAAY,CAACQ,OAAb,CAAqBd,GAArB,EAA0BQ,IAAI,CAACO,SAAL,CAAeF,KAAf,CAA1B;AACD,GAHD;;AAIA,SAAO,CAACH,WAAD,EAAcE,QAAd,CAAP;AACD,CAXM","sourcesContent":["import React, { useState } from 'react';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    console.log(\"Stored\", storeValue)\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : initialValue;\n  });\n  const setValue = value => {\n    setStoredValue(value);\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n  return [storedValue, setValue];\n};\n"]},"metadata":{},"sourceType":"module"}