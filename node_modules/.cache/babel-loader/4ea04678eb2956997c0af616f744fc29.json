{"ast":null,"code":"import _slicedToArray from \"/home/dude/lambda-projects/React/dark-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nexport var useDarkMode = function useDarkMode(initialValue) {\n  var _useLocalStorage = useLocalStorage(\"isOn\", {\n    status: initialValue\n  }),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      darkMode = _useLocalStorage2[0],\n      setDarkMode = _useLocalStorage2[1];\n\n  console.log(darkMode.status);\n  useEffect(function () {\n    if (darkMode === 'true') {\n      var element = document.querySelector(\"body\");\n      element.classList.add(\"dark-mode\");\n      console.log(\"I'm in the true Statment\");\n    } else {\n      var _element = document.querySelector(\"body\");\n\n      _element.classList.remove(\"dark-mode\");\n\n      console.log(\"I'm in the false statement\");\n    }\n\n    return darkMode, setDarkMode;\n  }, [darkMode]);\n};","map":{"version":3,"sources":["/home/dude/lambda-projects/React/dark-mode/src/hooks/useDarkMode.js"],"names":["React","useState","useEffect","useLocalStorage","useDarkMode","initialValue","status","darkMode","setDarkMode","console","log","element","document","querySelector","classList","add","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,eAAR,QAA8B,mBAA9B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAkB;AAAA,yBACXF,eAAe,CAAE,MAAF,EAAU;AAACG,IAAAA,MAAM,EAAGD;AAAV,GAAV,CADJ;AAAA;AAAA,MACpCE,QADoC;AAAA,MAC1BC,WAD0B;;AAE3CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACD,MAArB;AAGAJ,EAAAA,SAAS,CAAE,YAAO;AAClB,QAAIK,QAAQ,KAAK,MAAjB,EAAyB;AACvB,UAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,WAAtB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAED,KALD,MAMK;AACJ,UAAIC,QAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;;AACCF,MAAAA,QAAO,CAACG,SAAR,CAAkBE,MAAlB,CAAyB,WAAzB;;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAED;;AACC,WAAOH,QAAQ,EAAGC,WAAlB;AAGD,GAhBQ,EAgBN,CAACD,QAAD,CAhBM,CAAT;AAoBD,CAzBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useLocalStorage} from './useLocalStorage';\n\nexport const useDarkMode = (initialValue) => {\n  const [darkMode, setDarkMode] = useLocalStorage( \"isOn\", {status: (initialValue)});\n  console.log(darkMode.status)\n\n\n  useEffect( () =>  {\n  if (darkMode === 'true') {\n    let element = document.querySelector(\"body\")\n    element.classList.add(\"dark-mode\")\n    console.log(\"I'm in the true Statment\")\n\n  }\n  else {\n   let element = document.querySelector(\"body\")\n    element.classList.remove(\"dark-mode\")\n    console.log(\"I'm in the false statement\")\n\n  }\n    return(darkMode,  setDarkMode)\n\n\n  }, [darkMode]);\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}