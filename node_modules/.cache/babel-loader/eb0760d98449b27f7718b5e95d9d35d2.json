{"ast":null,"code":"import _slicedToArray from \"/home/dude/lambda-projects/React/dark-mode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\nexport var useDarkMode = function useDarkMode() {\n  var _useLocalStorage = useLocalStorage('isOn', true),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      darkMode = _useLocalStorage2[0],\n      setDarkMode = _useLocalStorage2[1];\n\n  console.log(\"DarkmodeStatus\", darkMode);\n  useEffect(function () {\n    if (darkMode) {\n      var element = document.querySelector('body');\n      element.classList.add('dark-mode');\n      console.log(\"I'm in the true Statment\");\n    } else {\n      var _element = document.querySelector('body');\n\n      _element.classList.remove('dark-mode');\n\n      console.log(\"I'm in the false statement\");\n    }\n  }, [darkMode]);\n  return [darkMode, setDarkMode];\n};","map":{"version":3,"sources":["/home/dude/lambda-projects/React/dark-mode/src/hooks/useDarkMode.js"],"names":["React","useState","useEffect","useLocalStorage","useDarkMode","darkMode","setDarkMode","console","log","element","document","querySelector","classList","add","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,yBACCD,eAAe,CAAC,MAAD,EAAU,IAAV,CADhB;AAAA;AAAA,MACxBE,QADwB;AAAA,MACdC,WADc;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,QAA9B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,QAAJ,EAAc;AACZ,UAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,WAAtB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAJD,MAIO;AACL,UAAIC,QAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;;AACAF,MAAAA,QAAO,CAACG,SAAR,CAAkBE,MAAlB,CAAyB,WAAzB;;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AAEF,GAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;AAYA,SAAO,CAACA,QAAD,EAAWC,WAAX,CAAP;AACD,CAjBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nexport const useDarkMode = () => {\n  const [darkMode, setDarkMode] = useLocalStorage('isOn',  true );\n  console.log(\"DarkmodeStatus\", darkMode);\n\n  useEffect(() => {\n    if (darkMode) {\n      let element = document.querySelector('body');\n      element.classList.add('dark-mode');\n      console.log(\"I'm in the true Statment\");\n    } else {\n      let element = document.querySelector('body');\n      element.classList.remove('dark-mode');\n      console.log(\"I'm in the false statement\");\n    }\n\n  }, [darkMode]);\n  return [darkMode, setDarkMode ]\n};\n"]},"metadata":{},"sourceType":"module"}